// Code generated by "stringer -type=powerState -trimprefix=powerState -linecomment"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[powerStateUnknown-0]
	_ = x[powerStateOther-1]
	_ = x[powerStateOn-2]
	_ = x[powerStateSleepLight-3]
	_ = x[powerStateSleepDeep-4]
	_ = x[powerStatePowerCycleOffSoft-5]
	_ = x[powerStateOffHard-6]
	_ = x[powerStateHibernateOffSoft-7]
	_ = x[powerStateOffSoft-8]
	_ = x[powerStatePowerCycleOffHard-9]
	_ = x[powerStateMasterBusReset-10]
	_ = x[powerStateDiagnosticInterruptNMI-11]
	_ = x[powerStateOffSoftGraceful-12]
	_ = x[powerStateOffHardGraceful-13]
	_ = x[powerStateMasterBusResetGraceful-14]
	_ = x[powerStatePowerCycleOffSoftGraceful-15]
	_ = x[powerStatePowerCycleOffHardGraceful-16]
	_ = x[powerStateDiagnosticInterruptInit-17]
}

const _powerState_name = "UnknownOtherOnSleepLightSleepDeepPowerCycleOffSoftOffHardHibernateOffSoftOffSoftPowerCycleOffHardMasterBusResetDiagnosticInterruptNMIOffSoftGracefulOffHardGracefulMasterBusResetGracefulPowerCycleOffSoftGracefulPowerCycleOffHardGracefulDiagnosticInterruptInit"

var _powerState_index = [...]uint16{0, 7, 12, 14, 24, 33, 50, 57, 73, 80, 97, 111, 133, 148, 163, 185, 210, 235, 258}

func (i powerState) String() string {
	if i < 0 || i >= powerState(len(_powerState_index)-1) {
		return "powerState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _powerState_name[_powerState_index[i]:_powerState_index[i+1]]
}
